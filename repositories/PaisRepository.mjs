// ‚úÖ Importa el modelo Mongoose del pa√≠s
// Este modelo define c√≥mo debe ser la estructura de cada pa√≠s en la base de datos
import Pais from '../models/paisModel.mjs';

// ===============================
// üì• FUNCI√ìN: Obtener todos los pa√≠ses
// ===============================
// Retorna todos los documentos de la colecci√≥n 'Grupo-01' (pa√≠ses)
// Se usa, por ejemplo, para listar los pa√≠ses en el dashboard o en la API
export async function obtenerTodos() {
    return await Pais.find(); // Sin filtros, devuelve todos los pa√≠ses
}

// ===============================
// ‚ûï FUNCI√ìN: Insertar pa√≠ses
// ===============================
// Recibe un array de pa√≠ses ya formateados y los guarda en MongoDB
// Se usa en el flujo de importaci√≥n autom√°tica desde la API externa
export async function insertarPais(paises) {
    console.log('Insertando pa√≠ses:', paises.length); // Log para verificar cu√°ntos se est√°n guardando
    return await Pais.insertMany(paises); // Inserta todos los documentos de una sola vez (bulk insert)
}

// ===============================
// ‚úèÔ∏è FUNCI√ìN: Actualizar un pa√≠s por ID
// ===============================
// Busca un pa√≠s por su ID y lo actualiza con los datos nuevos
// `{ new: true }` asegura que se devuelva el documento actualizado, no el anterior
export async function actualizarPais(id, nuevosDatos) {
    return await Pais.findByIdAndUpdate(id, nuevosDatos, { new: true });
}

// ===============================
// ‚ùå FUNCI√ìN: Eliminar un pa√≠s por ID
// ===============================
// Busca y elimina un pa√≠s por su ID
export async function eliminarPais(id) {
    return await Pais.findByIdAndDelete(id);
}

